plugins {
    // Apply the java and library plugin to add support for Java
    id 'java'
    id 'java-library-distribution'
    // Apply the maven plugin to add support for publications
    id 'maven-publish'

  // Apply yWorks coding style with editorconfig
    id 'org.ec4j.editorconfig' version '0.0.3'
}

allprojects {
    apply plugin: 'org.ec4j.editorconfig'
    version = String.format("%s.%s", VERSION_MAJOR, VERSION_MINOR)
    group = 'com.yworks'
}

repositories {
    mavenCentral()
}

configurations {
    annotation
    dependents.extendsFrom implementation
}

dependencies {
    annotation project(':annotation')
    implementation project(':annotation')
    implementation project(':retroguard')
    implementation 'com.google.guava:guava:28.1-android'
    implementation 'org.ow2.asm:asm:7.2'
    implementation 'org.apache.ant:ant:1.10.7'
    testImplementation 'junit:junit:4.13-beta-3'
}

compileJava {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

def LIBRARIES = [String.format("retroguard-%s.jar", version), "guava-28.1-android.jar", "asm-7.2.jar", "ant-1.10.7.jar"]
def LIBRARY_JARS = configurations.dependents.filter {
  file -> file.name in LIBRARIES
}

jar {
  manifest {
    attributes(
      'Class-Path': String.join(" ", *LIBRARY_JARS.collect {
        file -> file.name
      }),
      'Main-Class': 'com.yworks.yguard.YGuardLogParser'
    )
  }
}

distributions {
  bundle {
    baseName = "yguard-bundle"
    contents {
      from file("$projectDir/LICENSE")
      into("lib") {
        from LIBRARY_JARS
        from configurations.annotation
        from jar
      }
      into("docs") {
        from "$projectDir/docs"
        filter {
          line -> line
                  .replaceAll('@VERSION@', version)
                  .replaceAll('@VERSION_MAJOR@', project.findProperty('VERSION_MAJOR'))
        }
      }
    }
  }
}

editorconfig {
  includes = ['src/**', 'build.gradle']
  excludes = ['**/*.properties', '**/*.bits', '**/resources', '**/dist']
}

check.dependsOn editorconfigCheck

publishing {
  publications {
    maven(MavenPublication) {
      artifactId = 'yguard'

      from project.components.java
    }

    annotation(MavenPublication) {
      artifactId = 'annotation'

      from project(':annotation').components.java
    }

    retroguard(MavenPublication) {
      artifactId = 'retroguard'

      from project('retroguard').components.java
    }
  }
}
